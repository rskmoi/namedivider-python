# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with mypy, ruff and black
        run: |
          bash scripts/lint.sh

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [ '3.9', '3.10', '3.11', '3.12', '3.13' ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install libomp if the operating system is macOS.
        if: matrix.os == 'macos-latest'
        run: brew install libomp
      - name: Set macOS environment variables (direct paths)
        if: matrix.os == 'macos-latest'
        run: |
          echo "LIBRARY_PATH=/opt/homebrew/lib:$LIBRARY_PATH" >> $GITHUB_ENV
          echo "LDFLAGS=-L/opt/homebrew/lib $LDFLAGS" >> $GITHUB_ENV
          echo "RUSTFLAGS=-L /opt/homebrew/lib" >> $GITHUB_ENV
          echo "MACOSX_DEPLOYMENT_TARGET=14.0" >> $GITHUB_ENV
          echo "PATH=$HOME/.cargo/bin:$PATH" >> $GITHUB_ENV
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
#      - name: Test direct namedivider_core call
#        run: |
#          python -c "import namedivider_core, concurrent.futures; divider = namedivider_core.GBDTNameDivider(); print('Single:', divider.divide_name('菅義偉')); print('Multi-thread...'); f = lambda i: [divider.divide_name('田中太郎') for _ in range(10)]; list(concurrent.futures.ThreadPoolExecutor(4).map(f, range(4))); print('✅ Done')"
      - name: Run step by step debug test
        run: |
          python -m pytest tests/divider/test_rust_backend.py::TestRustBackend::test_gbdt_rust_backend_step_by_step -v -s
      - name: Test with pytest
        run: |
          coverage run -m pytest tests
        env:
          PYTHONPATH: .
          PYTHONUTF8: 1
      - name: Show coverage
        run: |
          coverage report
        env:
          PYTHONPATH: .
